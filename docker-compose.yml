version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: tax-assistant-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: tax-assistant
    volumes:
      - mongodb_data:/data/db
      - ./Backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - tax-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/tax-assistant --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: tax-assistant-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/tax-assistant?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRE: 30d
      JWT_COOKIE_EXPIRE: 30
      FRONTEND_URL: http://localhost:3000
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      MAX_FILE_SIZE: 10485760
      BCRYPT_ROUNDS: 12
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "5001:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - tax-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: tax-assistant-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - tax-network
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: tax-assistant-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - tax-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  uploads_data:
    driver: local
  redis_data:
    driver: local

networks:
  tax-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16