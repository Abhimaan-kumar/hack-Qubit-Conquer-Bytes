const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["overlay.js","chunks/ChatBubble.js","overlay.css"])))=>i.map(i=>d[i]);
const E="modulepreload",p=function(e){return"/"+e},f={},y=function(n,i,x){let c=Promise.resolve();if(i&&i.length>0){let u=function(t){return Promise.all(t.map(a=>Promise.resolve(a).then(l=>({status:"fulfilled",value:l}),l=>({status:"rejected",reason:l}))))};var b=u;document.getElementsByTagName("link");const s=document.querySelector("meta[property=csp-nonce]"),o=s?.nonce||s?.getAttribute("nonce");c=u(i.map(t=>{if(t=p(t),t in f)return;f[t]=!0;const a=t.endsWith(".css"),l=a?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${l}`))return;const r=document.createElement("link");if(r.rel=a?"stylesheet":E,a||(r.as="script"),r.crossOrigin="",r.href=t,o&&r.setAttribute("nonce",o),document.head.appendChild(r),a)return new Promise((h,v)=>{r.addEventListener("load",h),r.addEventListener("error",()=>v(new Error(`Unable to preload CSS for ${t}`)))})}))}function d(s){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=s,window.dispatchEvent(o),!o.defaultPrevented)throw s}return c.then(s=>{for(const o of s||[])o.status==="rejected"&&d(o.reason);return n().catch(d)})};if(document.getElementById("taxease-chat-root"))console.log("[TaxEase] Extension already loaded, skipping injection.");else{console.log("[TaxEase] Initializing extension overlay...");const e=document.createElement("div");e.id="taxease-chat-root",e.style.cssText=`
    all: initial;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 2147483647;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  `,e.addEventListener("mousedown",n=>{n.target===e&&(n.target.style.pointerEvents="none")}),document.body.appendChild(e),y(()=>import("./overlay.js"),__vite__mapDeps([0,1,2])).then(()=>{console.log("[TaxEase] Extension loaded successfully!")}).catch(n=>{console.error("[TaxEase] Failed to load extension:",n)})}let m=location.href;new MutationObserver(()=>{const e=location.href;e!==m&&(m=e,console.log("[TaxEase] Page navigation detected, overlay persists."))}).observe(document,{subtree:!0,childList:!0});const g=new MutationObserver(e=>{e.forEach(n=>{n.removedNodes.forEach(i=>{i.id==="taxease-chat-root"&&(console.warn("[TaxEase] Overlay removed, re-injecting..."),document.body.appendChild(i))})})});g.observe(document.body,{childList:!0});console.log("[TaxEase] Content script initialized.");
